{
  "ast": null,
  "code": "var _jsxFileName = \"C:\\\\Users\\\\AAA\\\\Documents\\\\It_Works_Wear\\\\studysys_frontend\\\\studysys\\\\src\\\\pages\\\\route\\\\privateRoute.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport Axios from \"axios\";\n\nfunction PrivateRoute(_ref) {\n  let {\n    children\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  let isAuthenticated = false;\n\n  const verifyUser = async token => {\n    // const token = localStorage.getItem(\"token\") || undefined;\n    const BASE_URL = \"http://localhost:8080/token\";\n    const headersConfig = {\n      \"Content-Type\": \"application/json\",\n      Token: token\n    }; // Send a POST request for verifying token\n\n    try {\n      await Axios.post(BASE_URL, {}, {\n        headers: headersConfig\n      });\n      console.log(\"have a successful token in local\");\n      isAuthenticated = true; // setIsAuth(true);\n\n      return true;\n    } catch (e) {\n      console.log(\"have a failure token in local\");\n      isAuthenticated = false; // setIsAuth(false);\n\n      return false;\n    }\n  };\n\n  const {\n    0: token\n  } = useState(localStorage.getItem(\"token\"));\n  useEffect(() => {\n    console.log(\"verify user in private Router\");\n    verifyUser(token).then(() => {\n      console.log(\"isAuthenticated: \" + isAuthenticated);\n    });\n  }, []);\n  return __jsx(Route, _extends({}, rest, {\n    render: ({\n      location\n    }) => isAuthenticated ? children : __jsx(Redirect, {\n      to: {\n        pathname: \"/user\",\n        state: {\n          from: location.pathname\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default PrivateRoute;",
  "map": {
    "version": 3,
    "sources": [
      "C:/Users/AAA/Documents/It_Works_Wear/studysys_frontend/studysys/src/pages/route/privateRoute.js"
    ],
    "names": [
      "React",
      "useEffect",
      "useState",
      "Redirect",
      "Route",
      "Axios",
      "PrivateRoute",
      "children",
      "rest",
      "isAuthenticated",
      "verifyUser",
      "token",
      "BASE_URL",
      "headersConfig",
      "Token",
      "post",
      "headers",
      "console",
      "log",
      "e",
      "localStorage",
      "getItem",
      "then",
      "location",
      "pathname",
      "state",
      "from"
    ],
    "mappings": ";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,YAAT,OAA6C;AAAA,MAAvB;AAAEC,IAAAA;AAAF,GAAuB;AAAA,MAARC,IAAQ;;AAC3C,MAAIC,eAAe,GAAG,KAAtB;;AAEA,QAAMC,UAAU,GAAG,MAAOC,KAAP,IAAiB;AAClC;AACA,UAAMC,QAAQ,GAAG,6BAAjB;AACA,UAAMC,aAAa,GAAG;AACpB,sBAAgB,kBADI;AAEpBC,MAAAA,KAAK,EAAEH;AAFa,KAAtB,CAHkC,CAOlC;;AACA,QAAI;AACF,YAAMN,KAAK,CAACU,IAAN,CAAWH,QAAX,EAAqB,EAArB,EAAyB;AAAEI,QAAAA,OAAO,EAAEH;AAAX,OAAzB,CAAN;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAT,MAAAA,eAAe,GAAG,IAAlB,CAHE,CAIF;;AACA,aAAO,IAAP;AACD,KAND,CAME,OAAOU,CAAP,EAAU;AACVF,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAT,MAAAA,eAAe,GAAG,KAAlB,CAFU,CAGV;;AACA,aAAO,KAAP;AACD;AACF,GApBD;;AAsBA,QAAM;AAAA,OAACE;AAAD,MAAUT,QAAQ,CAACkB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAAxB;AAEApB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAR,IAAAA,UAAU,CAACC,KAAD,CAAV,CAAkBW,IAAlB,CAAuB,MAAM;AAC3BL,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBT,eAAlC;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,SACE,MAAC,KAAD,eACMD,IADN;AAEE,IAAA,MAAM,EAAE,CAAC;AAAEe,MAAAA;AAAF,KAAD,KACNd,eAAe,GACbF,QADa,GAGb,MAAC,QAAD;AACE,MAAA,EAAE,EAAE;AACFiB,QAAAA,QAAQ,EAAE,OADR;AAEFC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAEH,QAAQ,CAACC;AADV;AAFL,OADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAmBD;;AAED,eAAelB,YAAf",
    "sourcesContent": [
      "import React, { useEffect, useState } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport Axios from \"axios\";\n\nfunction PrivateRoute({ children, ...rest }) {\n  let isAuthenticated = false;\n\n  const verifyUser = async (token) => {\n    // const token = localStorage.getItem(\"token\") || undefined;\n    const BASE_URL = \"http://localhost:8080/token\";\n    const headersConfig = {\n      \"Content-Type\": \"application/json\",\n      Token: token,\n    };\n    // Send a POST request for verifying token\n    try {\n      await Axios.post(BASE_URL, {}, { headers: headersConfig });\n      console.log(\"have a successful token in local\");\n      isAuthenticated = true;\n      // setIsAuth(true);\n      return true;\n    } catch (e) {\n      console.log(\"have a failure token in local\");\n      isAuthenticated = false;\n      // setIsAuth(false);\n      return false;\n    }\n  };\n\n  const [token] = useState(localStorage.getItem(\"token\"));\n\n  useEffect(() => {\n    console.log(\"verify user in private Router\");\n    verifyUser(token).then(() => {\n      console.log(\"isAuthenticated: \" + isAuthenticated);\n    });\n  }, []);\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuthenticated ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/user\",\n              state: {\n                from: location.pathname,\n              },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default PrivateRoute;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
